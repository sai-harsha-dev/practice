THEORY
------
- Secrets are storage units for confidential data.

CHARACTERISTICS
----------------
- The are stored in key:value form.
- By default encoded but not encrypted.
- They are stored in etcd and available cluster wide.
- Encryption can be activated if needed.
- They are mutable by default but can be made immutable.
- Accessible only within the same name space.

TYPES
------
- There are 3 types of secrets
  1. GENERIC ===> stores data from normal literals and files
  2. DOCKER-REGISTRY ===> stores data for private docker register image access
  3. TLS

USES
----
- Decouple configuration inforamtion information from pods, making them more scalable.
- Decouple sensitive information from pods spec, making them more publically sharable.

USING SECRETS
--------------
1. CREATE THE SECRET ----> 2. ACCESS USING ENVIRONMENT VARAIBLE/VOLUMES IN PODS.

------------------------------------------------------------------------------------------
YAML DEFINITION
---------------
a.CREATION ---> Done imperatively
-----------

b. ACCESS IN PODS USING ENVIRONMENT VARIABLES ===> Doesn't support runtime updation.
----------------------------------------------
1) NORMAL ENV TAG ====> Creates only specified number of enviroment varaible for secret key.                              
------------------                                      
apiVersion: v1                                          
kind: Pod                                               
metadata:                                               
 name: <name>                                           
 labels:
  <key>: <value>
spec:
 containers:
  - name: <name>
    image: <image path>
    env:
     - name: <name of enviroment variable>
       valueFrom:
        secretKeyRef:
         name: <name of the secret>
         key: <specific key within secret>
    - name: <name of enviroment variable>
       valueFrom:
        secretKeyRef:
         name: <name of the secret>
         key: <specific key within secret>
     .
     .
...

2) ENVFROM TAG ====> Creates enviroment varaible for all keys within the secret.
----------------
apiVersion: v1                                          
kind: Pod                                               
metadata:                                               
 name: <name>                                           
 labels:
  <key>: <value>
spec:
 containers:
  - name: <name>
    image: <image path>
    envFrom:
        secretKeyRef:
         name: <name of the secret>
         key: <specific key within secret>


c. ACCESS IN PODS USING VOLUMES AS FILES  ===> Supports runtime updation, creates a file per key value.
----------------------------------------
apiVersion: v1                                          
kind: Pod                                               
metadata:                                               
 name: <name>                                           
 labels:
  <key>: <value>
spec:
 volumes:
  - name: <name>
    secret:
    name: <name of the secret>
 containers:
  - name: <name>
    image: <image path>
 volumeMounts:
  name: <name of the volume>
  mountPath: <path to mount volume>
  ...

--------------------------------------------------------------------------------------------

COMMANDS
--------
a.CREATION ---> Done imperatively
-----------
 1. GENERIC SECRET
 -----------------
 kubectl create secret generic <name> --from-literal=<keyname>=<value> --from-literal=<keyname>=<value> .....

 2. DOCKER REGISTRY
 -------------------
 kubectl create secret docker-registry <name> \
 -- docker-server=<server url> \
 --docker-username=<username> \
 --docker-passpord=<password> \
 --docker-email=<email>

b. DELETE
----------
kubectl delete secret <name> <key>- ===> deletes a specific key

kubectl delete secret <name> ===> delete the whole secret
